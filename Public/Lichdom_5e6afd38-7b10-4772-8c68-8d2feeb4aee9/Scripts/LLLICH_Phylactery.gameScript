INIT

EVENTS

EVENT LLLICH_Phylactery_Apply
VARS
	CHARACTER:_Lich
ON
	OnCharacterEvent(_Lich, "LLLICH_ApplyPhylacteryStatusInfluence")
ACTIONS
	RemoveStatusInfluence(_Lich, LLLICH_PHYLACTERY_ACTIVE, 1000.0, "", 0)
	//CharacterRemoveStatus(_Lich, LLLICH_PHYLACTERY_ACTIVE)
	AddStatusInfluence(_Lich, LLLICH_PHYLACTERY_ACTIVE, 999.0, "", 0)
	
EVENT LLLICH_Phylactery_Remove
VARS
	CHARACTER:_Lich
ON
	OnCharacterEvent(_Lich, "LLLICH_ClearLich")
	OnCharacterEvent(_Lich, "LLLICH_ClearPhylacteryStatusInfluence")
ACTIONS
	RemoveStatusInfluence(_Lich, LLLICH_PHYLACTERY_ACTIVE, 1000.0, "", 0)
	//CharacterRemoveStatus(_Lich, LLLICH_PHYLACTERY_ACTIVE)
	
EVENT LLLICH_Phylactery_InfoStatus_RemoveWorkaround
VARS
	CHARACTER:_Lich
ON
	OnCharacterStatusRemoved(_Lich, LLLICH_PHYLACTERY_ACTIVE_INFO)
ACTIONS
IF "c1&!c2"
	HasStatusInfluence(_Lich, LLLICH_PHYLACTERY_ACTIVE)
	HasFlag(_Lich, "LLLICH_Settings_HidePhylacteryStatus")
THEN
	CharacterApplyStatus(_Lich, LLLICH_PHYLACTERY_ACTIVE_INFO, -1, 0, _Lich)
ENDIF

EVENT LLLICH_Phylactery_InfoStatus_Apply
VARS
	CHARACTER:_Lich
ON
	OnCharacterStatusApplied(_Lich, LLLICH_PHYLACTERY_ACTIVE)
ACTIONS
IF "!c1"
	HasFlag(_Lich, "LLLICH_Settings_HidePhylacteryStatus")
THEN
	CharacterApplyStatus(_Lich, LLLICH_PHYLACTERY_ACTIVE_INFO, -1, 0, _Lich)
ENDIF
	
EVENT LLLICH_Phylactery_InfoStatus_ApplyViaFlag
VARS
	CHARACTER:_Lich
ON
	OnCharacterFlagCleared("LLLICH_Settings_HidePhylacteryStatus", _Lich)
ACTIONS
IF "c1"
	//HasFlag(_Lich, "LLLICH_PhylacteryActive")
	CharacterHasStatus(_Lich, LLLICH_PHYLACTERY_ACTIVE)
THEN
	CharacterApplyStatus(_Lich, LLLICH_PHYLACTERY_ACTIVE_INFO, -1, 0, _Lich)
ENDIF

EVENT LLLICH_Phylactery_InfoStatus_Remove
VARS
	CHARACTER:_Lich
ON
	OnCharacterStatusRemoved(_Lich, LLLICH_PHYLACTERY_ACTIVE)
	OnCharacterFlagSet("LLLICH_Settings_HidePhylacteryStatus", _Lich)
ACTIONS
	CharacterRemoveStatus(_Lich, LLLICH_PHYLACTERY_ACTIVE_INFO, null, 0)
	
EVENT LLLICH_Phylactery_Respawn
VARS
	CHARACTER:_Lich
	FLOAT:_HP
	FLOAT3:_Pos
ON
	OnCharacterStatusApplied(_Lich, HIT)
ACTIONS
IF "c1&!c2"
	CharacterHasStatus(_Lich, LLLICH_PHYLACTERY_ACTIVE)
	HasFlag(_Lich, "LLLICH_LichIsRecovering")
THEN
	IF "c1&(c2|c3)"
		CharacterGetStat(_HP, _Lich, VitalityPoints)
		IsLessThen(_HP, 1.0)
		IsEqual(_HP, 1.0)
	THEN
		SetFlag(_Lich, "LLLICH_LichIsRecovering")
		SetTag(_Lich, "AI_IGNORED_TARGET")
		CharacterSetFloating(_Lich, 1)
		CharacterApplyStatus(_Lich, LLLICH_CLEAR_HARMFUL, 0, 1, _Lich)
		PlayEffectAt(_Lich, "RS3_FX_Skills_Soul_Cast_Soul_Impact_Root_01")
		CharacterPlayEffect(_Lich, "RS3_FX_Skills_Soul_LastRites_Disappear_Overlay_01")
		CharacterEvent(_Lich, "LLLICH_OnLichDying")
	ENDIF
ENDIF	

EVENT LLLICH_Phylactery_Teleported
VARS
	CHARACTER:_Lich
ON
	OnCharacterEvent(_Lich, "LLLICH_Phylactory_Regenerating_LichTeleported")
ACTIONS
	CharacterPlayEffect(_Lich, "RS3_FX_Skills_Polymorph_Soul_TurnInto_StatusApplied_Root_01")
	//CharacterApplyStatus(_Lich, UNCONSCIOUS, 3, 1, _Lich)
	/*
	LLLICH_RECOVERING applies UNCONSCIOUS if tagged with AI_IGNORED_TARGET
	This is to get around TeleportToPosition clearing UNCONSCIOUS
	*/
	CharacterApplyStatus(_Lich, LLLICH_RECOVERING, 3, 1, _Lich)
	
EVENT LLLICH_Phylactery_Recovery_End
VARS
	CHARACTER:_Lich
ON
	OnCharacterStatusRemoved(_Lich, LLLICH_RECOVERING)
ACTIONS
	ClearTag(_Lich, "AI_IGNORED_TARGET")
	ClearFlag(_Lich, "LLLICH_LichIsRecovering")
	CharacterSetFloating(_Lich, 0)
	//CharacterSetAnimationOverride(_Lich, "")

EVENT LLLICH_Phylactery_Destroyed
VARS
	CHARACTER:_Lich
ON
	OnCharacterEvent(_Lich, "LLLICH_OnPhylacteryDestroyed")
ACTIONS
	